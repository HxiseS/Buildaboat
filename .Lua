--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v69=0;while true do if (0==v69) then v19=v0(v3(v20,1,1));return "";end end else local v70=0;local v71;while true do if (0==v70) then v71=v2(v0(v20,16));if v19 then local v86=0;local v87;while true do if (1==v86) then return v87;end if (v86==0) then v87=v5(v71,v19);v19=nil;v86=1;end end else return v71;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v72=(v22/((3 -1)^(v23-(2 -1))))%(2^(((v24-(993 -(819 + 173))) -(v23-(845 -(399 + 445)))) + ((1 + 0) -0))) ;return v72-(v72%(1 -0)) ;else local v73=1695 -((2776 -(105 + 1122)) + 146) ;local v74;while true do if (v73==(1811 -(635 + 801 + 375))) then v74=(2 + 0)^(v23-(225 -(57 + 167))) ;return (((v22%(v74 + v74))>=v74) and (3 -2)) or 0 ;end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39=1715 -(484 + 1231) ;local v40;local v41;while true do if (v39==(441 -(115 + 99 + 226))) then return (v41 * ((1128 -(83 + 662)) -(72 + 55))) + v40 ;end if (v39==(0 + 0)) then v40,v41=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;v39=1 + 0 ;end end end local function v27()local v42,v43,v44,v45=v1(v16,v18,v18 + ((2310 -(485 + 204)) -(820 + 673 + 125)) );v18=v18 + (1472 -(971 + 497)) ;return (v45 * (16777845 -(301 + 298 + 30))) + (v44 * (140228 -74692)) + (v43 * (224 + 32)) + v42 ;end local function v28()local v46=v27();local v47=v27();local v48=1 + 0 + 0 ;local v49=(v21(v47,1,1794 -(934 + 840) ) * ((1 + 1)^32)) + v46 ;local v50=v21(v47,1871 -(1410 + 440) ,44 -13 );local v51=((v21(v47,32)==(2 -1)) and  -(1 + 0)) or (688 -((2083 -(676 + 987)) + 267)) ;if (v50==(0 -0)) then if (v49==((1746 + 9) -(1119 + 636))) then return v51 * 0 ;else local v79=0;while true do if (v79==(0 + 0)) then v50=1 + 0 ;v48=1138 -(91 + (2760 -1713)) ;break;end end end elseif (v50==(2275 -((138 -68) + (519 -(145 + 216))))) then return ((v49==(153 -(151 + 2))) and (v51 * ((1 + 0)/(0 + 0)))) or (v51 * NaN) ;end return v8(v51,v50-((1739 -(949 + 749)) + (1257 -(152 + 123))) ) * (v48 + (v49/((2 + 0 + 0)^(1817 -(1454 + 311))))) ;end local function v29(v30)local v52;if  not v30 then local v75=571 -(506 + 65) ;while true do if (v75==(0 -0)) then v30=v27();if (v30==(880 -(188 + 692))) then return "";end break;end end end v52=v3(v16,v18,(v18 + v30) -(1 + 0) );v18=v18 + v30 ;local v53={};for v65=1, #v52 do v53[v65]=v2(v1(v3(v52,v65,v65)));end return v6(v53);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do local v67=0;local v68;while true do if (0~=v67) then else v68=987 -(96 + 891) ;while true do if (v68==(0 -0)) then if (0==v54) then local v98=1379 -(129 + 1250) ;while true do if (v98~=(0 -0)) then else v55={};v56={};v98=1966 -(395 + 1570) ;end if (v98~=1) then else v57={};v54=1 -0 ;break;end end end if (v54~=(305 -(228 + 75))) then else local v99=0;while true do if (v99==(1 + 0)) then for v113=1,v27() do local v114=0;local v115;while true do if (v114~=0) then else v115=v25();if (v21(v115,1,1)==0) then local v125=0;local v126;local v127;local v128;local v129;while true do if (v125~=0) then else local v146=0;while true do if (v146==0) then local v182=0;while true do if (v182~=1) then else v146=1;break;end if (v182==(0 + 0)) then v126=337 -(137 + 200) ;v127=nil;v182=1 + 0 ;end end end if (v146==(1 + 0)) then v125=1562 -(1452 + 109) ;break;end end end if (v125==1) then local v147=250 -(175 + 75) ;while true do if (1==v147) then v125=1225 -(754 + 469) ;break;end if (v147~=0) then else v128=nil;v129=nil;v147=1 + 0 ;end end end if (v125==2) then while true do if (v126==(844 -(144 + 700))) then local v183=0 -0 ;local v184;while true do if (v183==(0 + 0)) then v184=0 -0 ;while true do if (v184~=0) then else local v210=0 -0 ;while true do if (1==v210) then v184=1;break;end if (v210==(650 -(295 + 355))) then v127=v21(v115,2,2 + 1 );v128=v21(v115,4,6);v210=3 -2 ;end end end if (v184==(1 -0)) then v126=1;break;end end break;end end end if (v126~=(7 -4)) then else if (v21(v128,3 + 0 ,1 + 2 )==1) then v129[1248 -(360 + 884) ]=v60[v129[4]];end v55[v113]=v129;break;end if ((2 + 0)==v126) then local v186=0;local v187;while true do if (v186==(1680 -(1081 + 599))) then v187=0;while true do if (v187~=(1 -0)) then else v126=3;break;end if (v187~=(0 -0)) then else local v211=0 -0 ;local v212;while true do if (v211==0) then v212=0;while true do if (v212==(817 -(530 + 287))) then local v227=0;while true do if (v227==0) then if (v21(v128,1,1477 -(770 + 706) )==(1372 -(696 + 675))) then v129[6 -4 ]=v60[v129[2]];end if (v21(v128,3 -1 ,2)~=1) then else v129[3]=v60[v129[3]];end v227=1;end if (v227~=1) then else v212=1;break;end end end if (v212==(1 -0)) then v187=1;break;end end break;end end end end break;end end end if (v126==1) then local v188=0 -0 ;while true do if (v188==(1765 -(1532 + 233))) then local v198=0 -0 ;local v199;while true do if (v198~=(0 -0)) then else v199=0 + 0 ;while true do if (v199==1) then v188=1 -0 ;break;end if (v199==0) then local v221=0 -0 ;while true do if (v221==(145 -(25 + 119))) then v199=1;break;end if (v221~=0) then else v129={v26(),v26(),nil,nil};if (v127==(0 -0)) then local v228=0;local v229;while true do if (v228~=(0 + 0)) then else v229=0;while true do if (0==v229) then v129[1 + 2 ]=v26();v129[4]=v26();break;end end break;end end elseif (v127==(574 -(145 + 428))) then v129[3]=v27();elseif (v127==(4 -2)) then v129[3]=v27() -(2^16) ;elseif (v127~=(7 -4)) then else local v240=0 + 0 ;while true do if (v240==0) then v129[3]=v27() -((833 -(162 + 669))^(28 -12)) ;v129[1179 -(435 + 740) ]=v26();break;end end end v221=1 + 0 ;end end end end break;end end end if (v188==1) then v126=2;break;end end end end break;end end end break;end end end v54=2 + 1 ;break;end if (v99==(0 -0)) then for v116=1,v59 do local v117=502 -(287 + 215) ;local v118;local v119;while true do if (v117~=(0 + 0)) then else local v122=0;local v123;while true do if (v122==0) then v123=0 + 0 ;while true do if (v123~=(865 -(660 + 205))) then else local v148=0 + 0 ;while true do if (v148==(221 -(45 + 176))) then v118=v25();v119=nil;v148=1513 -(983 + 529) ;end if (v148==(4 -3)) then v123=1 -0 ;break;end end end if (v123~=(2 -1)) then else v117=2 -1 ;break;end end break;end end end if (v117~=1) then else if (v118==1) then v119=v25()~=0 ;elseif (v118==2) then v119=v28();elseif (v118==(1670 -(923 + 744))) then v119=v29();end v60[v116]=v119;break;end end end v58[3]=v25();v99=1;end end end v68=2 -1 ;end if (1~=v68) then else if ((1 -0)==v54) then v58={v55,v56,nil,v57};v59=v27();v60={};v54=2;end if (v54~=3) then else for v103=1,v27() do v56[v103-(1 + 0) ]=v33();end for v105=1,v27() do v57[v105]=v27();end return v58;end break;end end break;end end end end local function v34(v35,v36,v37)local v61=0;local v62;local v63;local v64;while true do if (v61==0) then v62=v35[1];v63=v35[2];v61=1;end if (v61==1) then v64=v35[3];return function(...)local v80=0;local v81;local v82;local v83;local v84;local v85;while true do if (v80==2) then v85=nil;v85=function()local v88=v62;local v89=v63;local v90=v64;local v91=v32;local v92={};local v93={};local v94={};for v100=(379 -(266 + 113)) + 0 ,v84 do if (((9620 -6358)>=(3191 -1574)) and (v100>=v90)) then v92[v100-v90 ]=v83[v100 + (1342 -(652 + 689)) ];else v94[v100]=v83[v100 + (1863 -((1849 -(404 + 954)) + 1371)) ];end end local v95=(v84-v90) + (1399 -(1266 + 132)) ;local v96;local v97;while true do local v101=0 -(1646 -(112 + 1534)) ;while true do if ((v101==((25 -(18 + 5)) -1)) or ((956 + 2080)==((7404 -(101 + 615)) -1908))) then if ((v97<=(8 + 3)) or ((2798 -1253)<=(952 -586))) then if ((v97<=((1142 -(38 + 1099)) + 0)) or (((7344 -3669) + 1176)==3155)) then if (((3449 -(1688 + (620 -442)))<=(20569 -15799)) and (v97<=(1487 -(950 + 535)))) then if ((v97<=(0 -0)) or ((209 + 398)>=(6207 -3848))) then v94[v96[8 -6 ]]=v94[v96[670 -((680 -(354 + 17)) + 358) ]];elseif ((v97>(1 + 0)) or ((7592 -3820)==(1481 -(6 + 12)))) then if ((((5560 -(1585 + 225)) -2546)==(1007 + 197)) and (v96[431 -((1853 -(1238 + 399)) + 213) ]==v94[v96[10 -6 ]])) then v81=v81 + 1 ;else v81=v96[7 -4 ];end else for v179=v96[2 + 0 ],v96[2 + 1 ] do v94[v179]=nil;end end elseif ((v97<=(1 + (850 -(555 + 293)))) or ((2751 -(1331 + 363))>(1683 + 285))) then local v132=0 -0 ;local v133;while true do if (((4454 -(228 + (671 -363)))<(3246 + 1101)) and (v132==((0 -0) + 0))) then v133=v96[1 + 1 ];v94[v133](v94[v133 + (2 -1) ]);break;end end elseif ((v97>((6 + 8) -10)) or (((2062 -(329 + 822)) + 317)>=(2837 + 1537))) then v94[v96[(1103 -(949 + 151)) -1 ]]=v37[v96[1546 -(1270 + 273) ]];else v94[v96[819 -((116 -55) + 756) ]]();end elseif (((54 + 20)<=(3497 + 212)) and (v97<=(1179 -((1272 -(343 + 891)) + 441 + 692)))) then if ((v97<=(24 -18)) or ((5890 -3802)==(4551 -(436 + (1937 -(162 + 1309)))))) then v81=v96[3 -0 ];elseif (((3972 -2859)==((6496 -(1148 + 417)) -3818)) and (v97==(20 -13))) then local v151=(1828 -(1020 + 808)) + 0 ;local v152;local v153;local v154;while true do if ((v151==(525 -(389 + (757 -(447 + 174))))) or ((710 + 47)==((21777 -16219) -(951 + 1 + 7)))) then v152=(1454 -(592 + 178)) -(103 + 581) ;v153=nil;v151=1 + 0 ;end if ((v151==(1126 -(75 + 1050))) or ((10 + 4352)==(5045 -((1060 -(31 + 706)) + 1086)))) then v154=nil;while true do if (((3126 + 60)>(142 + 247)) and ((0 + 0)==v152)) then v153=0 + 0 ;v154=nil;v152=1 + 0 ;end if (((3182 -(130 + 256))>=(6389 -3936)) and (v152==(435 -(177 + 172 + 85)))) then while true do if (((0 + 0)==v153) or ((3268 -(478 + 126))<(361 + 978))) then v154=v96[(215 -(181 + 32)) + 0 ];v94[v154]=v94[v154](v94[v154 + 1 + 0 ]);break;end end break;end end break;end end else local v155=(1418 -(899 + 519)) -0 ;local v156;local v157;local v158;local v159;while true do if ((v155==((2814 -1496) -(766 + 551))) or ((774 -(166 + 30))>=((13966 -6397) -4090))) then v158=nil;v159=nil;v155=2 + 0 + 0 ;end if (((586 -424)<(829 -(1366 -(693 + 386)))) and (v155==(1238 -(1124 + 114)))) then v156=1007 -(231 + 776) ;v157=nil;v155=3 -2 ;end if (((3268 -(683 + 15 + 32))==(2274 + (665 -(38 + 363)))) and (v155==(1 + 1))) then while true do if (((18 + 1 + 146)<((7539 -(1554 + 124)) -(782 + 423))) and (v156==(1060 -(410 + 650)))) then local v200=1344 -(146 + (2714 -1516)) ;while true do if (((5901 -(1309 + 66 + 57))>=((7847 -3876) -1823)) and ((0 -0)==v200)) then v157=0 -0 ;v158=nil;v200=1524 -(63 + 1460) ;end if ((v200==(1134 -(206 + (1528 -601)))) or ((3970 -(992 + 897))<((2593 -1213) -(689 + 575)))) then v156=(3374 -2188) -(1030 + 155) ;break;end end end if ((v156==(58 -(26 + (1966 -(340 + 1595))))) or ((6873 -2076)<((4017 + 903) -2125))) then v159=nil;while true do if (((2278 + (978 -339))>(20 + 277)) and ((277 -(209 + 67))==v157)) then for v220=v158 + 1 + 0 ,v96[9 -6 ] do v7(v159,v94[v220]);end break;end if (((2823 + (1720 -1162))<=(5013 -((468 -178) + 694 + 41))) and (v157==((2693 -1576) -(828 + 289)))) then local v218=(213 -141) -(69 + 3) ;while true do if (((8386 -3988)>=(13949 -10908)) and ((373 -(161 + 212))==v218)) then v158=v96[2 + 0 ];v159=v94[v158];v218=1 + (0 -0) ;end if (((6680 -3889)<=(16100 -11688)) and (v218==(1 + 0))) then v157=1;break;end end end end break;end end break;end end end elseif ((v97<=(6 + 3)) or ((254 + 804)==(913 + 1251))) then local v135=0;local v136;local v137;while true do if ((v135==(105 -((754 -(374 + 374)) + 98))) or ((1376 + 2757)<((3686 -(128 + 328)) -((1888 -(280 + 1387)) + 193)))) then while true do if (((3172 + 526)>2770) and (v136==((6359 -4366) -(417 + 1576)))) then v137=v96[1734 -(181 + 1551) ];v94[v137](v13(v94,v137 + (2 -(1 + 0)) ,v96[515 -((1262 -762) + 12) ]));break;end end break;end if (((4209 -(101 + 24))>((3575 -(121 + 240)) -(1159 + 101))) and (v135==(1382 -((1130 -(196 + 138)) + 586)))) then v136=0;v137=nil;v135=1;end end elseif ((v97==(3 + 7)) or (384>(3963 + 91))) then local v160=0 + 0 ;local v161;local v162;while true do if ((((4938 -(81 + 224)) -(482 + 493))==(4022 -(226 + 138))) and (v160==(1 + 0))) then while true do if (((3249 -(376 + 113 + 13))==(3863 -(379 + 737))) and (v161==(0 + 0))) then v162=v96[3 -(1 + 0) ];v94[v162]=v94[v162](v13(v94,v162 + ((1 + 0) -0) ,v96[10 -7 ]));break;end end break;end if (((4750 -(330 + (2215 -(52 + 1001))))>=(3542 -1966)) and (v160==((118 + 344) -(221 + 241)))) then local v191=451 -(353 + 98) ;while true do if ((v191==((4520 -3162) -(237 + 1120))) or ((352 + 873)>=(3385 -(368 + 1166)))) then v160=1 + 0 ;break;end if ((v191==(0 + 0)) or ((635 -499)>(14331 -10713))) then v161=0 + 0 ;v162=nil;v191=3 -2 ;end end end end else v94[v96[24 -(16 + 6) ]]=v96[7 -4 ]~=((0 + 0) -(378 -(180 + 198))) ;end elseif (((6722 -((1236 -(774 + 284)) + 1667))>=((6503 -4212) -(18 + (795 -572)))) and (v97<=(29 -12))) then if ((((3463 -(189 + 1060)) + 2785)>(1596 + 477)) and (v97<=((585 -369) -(54 + 148)))) then if ((((468 -369) + 301)==(2309 -(1387 + 522))) and (v97<=(7 + 5))) then local v138=0 + 0 ;local v139;local v140;local v141;local v142;local v143;while true do if ((2548==(3043 -((523 -361) + 333))) and (((4675 -3308) -(471 + 896))==v138)) then v139=1795 -(1608 + 91 + 96) ;v140=nil;v138=1 + (0 -0) ;end if (((2409 -1168)<=(7838 -5909)) and (v138==(2 -0))) then v143=nil;while true do if ((((954 + 747) -(135 + 695))<=(1250 + 1093)) and (v139==(746 -(21 + 52 + 672)))) then local v196=1163 -(689 + 474) ;while true do if ((v196==((5532 -3594) -(1465 + 472))) or ((220 + 1064 + 1080)>=(7003 -3538))) then v139=568 -(303 + 263) ;break;end if (((2485 -(17 + 1187))>(40 -(2 + 3 + 25))) and (v196==((124 + 277) -((500 -294) + 195)))) then v142=nil;v143=nil;v196=1760 -(1441 + 318) ;end end end if (((371 + 3238)>=(3662 -1266)) and (v139==(789 -(512 + 277)))) then local v197=1953 -(1436 + 517) ;while true do if ((v197==(1 -0)) or ((734 -(110 + 76))>((1490 + 3138) -((3550 -(458 + 1433)) + 303)))) then v139=1 + 0 ;break;end if ((v197==(0 + 0)) or ((687 + 836)==(7928 -3082))) then v140=0 -0 ;v141=nil;v197=1 + 0 + 0 ;end end end if ((v139==(512 -(180 + 170 + 160))) or (((5367 -1836) -(1426 + 170))<(94 + 79 + 343))) then while true do if (((4568 -(243 + (2391 -(703 + 603))))<=(7900 -4604)) and (v140==(1970 -(542 + 1428)))) then local v207=178 -(162 + 16) ;local v208;while true do if ((v207==((0 -0) + 0)) or ((894 + 3092)==(4291 -1090))) then v208=0 -(0 -0) ;while true do if (((1841 -(117 + 7))>(379 + 320)) and (v208==((740 -(241 + 498)) + 0))) then v140=(7 + 314) -(226 + 94) ;break;end if ((v208==(539 -(357 + 182))) or ((165 + 1965)<(517 + 571))) then local v226=1668 -(491 + (2863 -(294 + 1392))) ;while true do if (((3882 -(52 + 1098))>=(968 -237)) and (v226==(1 + 0))) then v208=1 + 0 ;break;end if ((v226==(0 -0)) or ((1508 -915)>(3708 -(752 + 151)))) then v141=v96[557 -(58 + 402 + 95) ];v142=v94[v141];v226=(1625 -(1276 + 348)) + 0 ;end end end end break;end end end if ((v140==(1881 -(516 + 50 + 1314))) or ((1656 + 954)==(920 + 185 + 2319))) then v143=v96[3];for v213=330 -(102 + 67 + 160) ,v143 do v142[v213]=v94[v141 + v213 ];end break;end end break;end end break;end if (((2975 + 118 + 650)>(2874 -(1637 + 99))) and (v138==(1 + 0 + 0))) then v141=nil;v142=nil;v138=2;end end elseif ((v97>((825 -(91 + 704)) -17)) or ((541 + 2146)==2189)) then v94[v96[1995 -(48 + 1945) ]]=v96[(453 -112) -(299 + 39) ];elseif ((((2412 -(180 + 445)) + 1744)==(3257 + 274)) and (v94[v96[2 + 0 ]]==v96[4 + 0 ])) then v81=v81 + (3 -2) + 0 ;else v81=v96[113 -(10 + 100) ];end elseif ((v97<=(790 -(72 + 703))) or ((4608 -2832)>=(3291 -(458 + (2662 -(1450 + 182)))))) then if (((529 + 301)<(1442 + 569 + 382)) and v94[v96[1 + 1 ]]) then v81=v81 + 1 + (860 -(214 + 646)) ;else v81=v96[345 -((523 -332) + 151) ];end elseif ((v97==((1433 -(280 + 285)) -(432 + 420))) or ((12737 -7899)<=(2453 -(922 + 733)))) then v37[v96[(22 -16) -(2 + 1) ]]=v94[v96[716 -((2103 -(214 + 1211)) + 36) ]];else v94[v96[4 -2 ]][v96[5 -2 ]]=v94[v96[3 + 1 ]];end elseif ((v97<=(1938 -(443 + 1475))) or ((493 + 321)==(4540 -(156 + 1048)))) then if (((21716 -17311)>=(49 + 99 + 3576)) and (v97<=(18 + 0))) then do return;end elseif ((4945==(12103 -7158)) and (v97==(34 -15))) then v94[v96[960 -(578 + 380) ]]={};else v94[v96[3 -1 ]]=v34(v89[v96[(3413 -(553 + 1063)) -(113 + 1681) ]],nil,v37);end elseif ((v97<=(13 + 8)) or (2630==(5531 -(64 + 303 + 642)))) then v94[v96[1 + 1 ]][v96[13 -10 ]]=v96[1 + (1027 -(407 + 617)) ];elseif (((4753 -(491 + 476))>=(756 + (2686 -(394 + 20)))) and (v97==(5 + (1101 -(1053 + 31))))) then local v173=(1386 -(355 + 1031)) -0 ;local v174;local v175;local v176;while true do if ((((1620 -835) + 911)<(12358 -7875)) and (v173==((1441 -(1258 + 180)) -2))) then v176=nil;while true do if (((3692 -2118)<=(2712 -(105 + 124 + 367))) and ((1735 -(861 + 874))==v174)) then local v203=(0 -0) + 0 ;while true do if (((2063 + 467)<=(3545 -(457 + 66))) and (v203==1)) then v174=1 + (1167 -(961 + 206)) ;break;end if ((v203==(0 -(62 -(23 + 39)))) or ((6416 -4470)>=(2111 + 99))) then local v219=428 -(222 + 206) ;while true do if ((v219==(1020 -(482 + (1015 -478)))) or ((1085 + 2363)<=(38 + 467))) then v203=1350 -(240 + 1109) ;break;end if (((1329 -(893 -(158 + 242)))<(582 + 310)) and ((754 -((179 -101) + 676))==v219)) then v175=v96[(1807 -1175) -(419 + 211) ];v176=v94[v96[3 + 0 ]];v219=(930 -(855 + 74)) + 0 ;end end end end end if (((1 + (1370 -(276 + 1094)))==v174) or ((3567 -(29 + 249))<(3010 -((916 -(33 + 27)) + 123)))) then v94[v175 + ((2 -1) -(0 + 0)) ]=v176;v94[v175]=v176[v96[498 -(291 + 203) ]];break;end end break;end if (((3271 -(733 + 426))>=((558 -348) + 343)) and (v173==((0 -0) + 0))) then local v192=0 -0 ;while true do if (((122 + 157 + 154)<=(3689 -(100 + 173))) and (v192==(1 + (1982 -(1362 + 620))))) then v173=(158 + 798) -(634 + 321) ;break;end if (((5334 -(852 + 468))<(5946 -(46 + 1000))) and (v192==(0 + 0))) then v174=0 -0 ;v175=nil;v192=45 -(28 + 16) ;end end end end else v94[v96[2 + 0 ]]=v94[v96[1 + 2 ]][v96[4 + 0 ]];end v81=v81 + 1 ;break;end if (((237 + 468)<=(2600 + 2098)) and (v101==(0 + 0))) then local v112=0 + (0 -0) ;while true do if ((v112==(0 + 0)) or ((5139 -(127 + 605))==(3710 -1592))) then v96=v88[v81];v97=v96[1 + 0 ];v112=1 + 0 ;end if (((6352 -(1396 + 2348))>=(1204 -868)) and (1==v112)) then v101=(1402 -(364 + 1037)) + 0 ;break;end end end end end end;v80=3;end if (0==v80) then v81=1;v82= -1;v80=1;end if (v80==1) then v83={...};v84=v12("#",...) -1 ;v80=2;end if (v80==3) then A,B=v32(v11(v85));if  not A[1] then local v102=v35[4][v81] or "?" ;error("Script error at ["   .. v102   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
